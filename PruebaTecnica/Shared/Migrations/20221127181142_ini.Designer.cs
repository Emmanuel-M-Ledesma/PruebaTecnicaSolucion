// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica.Shared.Data;

#nullable disable

namespace PruebaTecnica.Shared.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221127181142_ini")]
    partial class ini
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Shared.Models.EstadoPedido", b =>
                {
                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("TipoEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadoPedido", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProveedor", "IdSucursal");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.ProvSuc", b =>
                {
                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.HasKey("IdProveedor", "IdSucursal");

                    b.HasIndex("IdSucursal");

                    b.ToTable("ProvSuc", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<int>("Comision")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Provincium", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdProveedor");

                    b.HasIndex(new[] { "User" }, "UQ__Usuario__BD20C6F19ED1D57A")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Pedido", b =>
                {
                    b.HasOne("PruebaTecnica.Shared.Models.EstadoPedido", "IdEstadoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK_Pedido_EstadoPedido");

                    b.HasOne("PruebaTecnica.Shared.Models.ProvSuc", "Id")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdProveedor", "IdSucursal")
                        .HasConstraintName("FK_Pedido_ProvSuc");

                    b.Navigation("Id");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.ProvSuc", b =>
                {
                    b.HasOne("PruebaTecnica.Shared.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("ProvSucs")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK_ProvSuc_Proveedor");

                    b.HasOne("PruebaTecnica.Shared.Models.Sucursal", "IdSucursalNavigation")
                        .WithMany("ProvSucs")
                        .HasForeignKey("IdSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_ProvSuc_Sucursal");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Sucursal", b =>
                {
                    b.HasOne("PruebaTecnica.Shared.Models.Provincium", "IdProvinciaNavigation")
                        .WithMany("Sucursals")
                        .HasForeignKey("IdProvincia")
                        .IsRequired()
                        .HasConstraintName("FK_Sucursal_Provincia");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Usuario", b =>
                {
                    b.HasOne("PruebaTecnica.Shared.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Proveedor");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.EstadoPedido", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.ProvSuc", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Proveedor", b =>
                {
                    b.Navigation("ProvSucs");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Provincium", b =>
                {
                    b.Navigation("Sucursals");
                });

            modelBuilder.Entity("PruebaTecnica.Shared.Models.Sucursal", b =>
                {
                    b.Navigation("ProvSucs");
                });
#pragma warning restore 612, 618
        }
    }
}
